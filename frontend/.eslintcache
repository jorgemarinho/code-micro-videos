[{"/var/www/frontend/src/App.js":"1","/var/www/frontend/src/pages/genre/PageForm.tsx":"2","/var/www/frontend/src/pages/cast-member/Form.tsx":"3","/var/www/frontend/src/pages/genre/Form.tsx":"4","/var/www/frontend/src/components/Badge.tsx":"5","/var/www/frontend/src/pages/category/Table.tsx":"6","/var/www/frontend/src/pages/category/Form.tsx":"7","/var/www/frontend/src/pages/cast-member/Table.tsx":"8","/var/www/frontend/src/pages/genre/Table.tsx":"9","/var/www/frontend/src/index.js":"10","/var/www/frontend/src/components/Navbar/Menu.tsx":"11","/var/www/frontend/src/pages/Dashboard.tsx":"12","/var/www/frontend/src/components/SubmitActions.tsx":"13","/var/www/frontend/src/components/DefaultForm.tsx":"14","/var/www/frontend/src/components/Navbar/index.tsx":"15","/var/www/frontend/src/routes/AppRouter.tsx":"16","/var/www/frontend/src/reportWebVitals.js":"17","/var/www/frontend/src/routes/index.tsx":"18","/var/www/frontend/src/components/SnackbarProvider.tsx":"19","/var/www/frontend/src/util/vendor/yup.ts":"20","/var/www/frontend/src/util/http/index.ts":"21","/var/www/frontend/src/components/Table/index.tsx":"22","/var/www/frontend/src/theme.ts":"23","/var/www/frontend/src/util/http/cast-member-http.ts":"24","/var/www/frontend/src/components/Breadcrumbs.tsx":"25","/var/www/frontend/src/pages/category/PageList.tsx":"26","/var/www/frontend/src/util/http/genre-http.ts":"27","/var/www/frontend/src/pages/category/PageForm.tsx":"28","/var/www/frontend/src/pages/cast-member/PageForm.tsx":"29","/var/www/frontend/src/util/http/http-resource.ts":"30","/var/www/frontend/src/pages/cast-member/PageList.tsx":"31","/var/www/frontend/src/components/Table/FilterResetButton.tsx":"32","/var/www/frontend/src/components/Navbar/Page.tsx":"33","/var/www/frontend/src/util/http/category-http.ts":"34","/var/www/frontend/src/pages/genre/PageList.tsx":"35","/var/www/frontend/src/store/filter/index.ts":"36","/var/www/frontend/src/hooks/useFilter.ts":"37","/var/www/frontend/src/util/models.ts":"38","/var/www/frontend/src/pages/video/Table.tsx":"39","/var/www/frontend/src/pages/video/Form/index.tsx":"40","/var/www/frontend/src/util/http/video-http.ts":"41","/var/www/frontend/src/components/Rating.tsx":"42","/var/www/frontend/src/pages/video/PageForm.tsx":"43","/var/www/frontend/src/pages/video/Form/RatingField.tsx":"44","/var/www/frontend/src/components/InputFile.tsx":"45","/var/www/frontend/src/pages/video/Form/UploadField.tsx":"46","/var/www/frontend/src/components/AsyncAutocomplete.tsx":"47","/var/www/frontend/src/components/GridSelectedItem.tsx":"48","/var/www/frontend/src/components/GridSelected.tsx":"49","/var/www/frontend/src/hooks/useHttpHandled.tsx":"50","/var/www/frontend/src/pages/video/Form/GenreField.tsx":"51","/var/www/frontend/src/hooks/useCollectionManager.tsx":"52","/var/www/frontend/src/pages/video/Form/CategoryField.tsx":"53","/var/www/frontend/src/util/model-filters.tsx":"54","/var/www/frontend/src/pages/video/Form/CastMemberField.tsx":"55","/var/www/frontend/src/hooks/useDeleteCollection.ts":"56","/var/www/frontend/src/components/Spinner.tsx":"57","/var/www/frontend/src/components/loading/LoadingProvider.tsx":"58","/var/www/frontend/src/components/loading/LoadingContext.tsx":"59","/var/www/frontend/src/components/SnackbarUpload/index.tsx":"60","/var/www/frontend/src/hooks/useSnackbarFormError.ts":"61","/var/www/frontend/src/components/SnackbarUpload/UploadItem.tsx":"62"},{"size":1062,"mtime":1614989574371,"results":"63","hashOfConfig":"64"},{"size":275,"mtime":1607972873115,"results":"65","hashOfConfig":"64"},{"size":4760,"mtime":1610500774483,"results":"66","hashOfConfig":"64"},{"size":5669,"mtime":1610993075611,"results":"67","hashOfConfig":"64"},{"size":640,"mtime":1608411839956,"results":"68","hashOfConfig":"64"},{"size":8278,"mtime":1614992693983,"results":"69","hashOfConfig":"64"},{"size":4739,"mtime":1614993485310,"results":"70","hashOfConfig":"64"},{"size":8077,"mtime":1612960498427,"results":"71","hashOfConfig":"64"},{"size":9262,"mtime":1612829870433,"results":"72","hashOfConfig":"64"},{"size":500,"mtime":1606175008771,"results":"73","hashOfConfig":"64"},{"size":2141,"mtime":1613003591641,"results":"74","hashOfConfig":"64"},{"size":276,"mtime":1606776636774,"results":"75","hashOfConfig":"64"},{"size":963,"mtime":1610500097076,"results":"76","hashOfConfig":"64"},{"size":865,"mtime":1610503332823,"results":"77","hashOfConfig":"64"},{"size":957,"mtime":1606529243914,"results":"78","hashOfConfig":"64"},{"size":616,"mtime":1606776205281,"results":"79","hashOfConfig":"64"},{"size":362,"mtime":1606175008775,"results":"80","hashOfConfig":"64"},{"size":2815,"mtime":1613002042402,"results":"81","hashOfConfig":"64"},{"size":1503,"mtime":1614126298163,"results":"82","hashOfConfig":"64"},{"size":350,"mtime":1613052436878,"results":"83","hashOfConfig":"64"},{"size":125,"mtime":1607364129852,"results":"84","hashOfConfig":"64"},{"size":3773,"mtime":1612308552043,"results":"85","hashOfConfig":"64"},{"size":3492,"mtime":1612477020114,"results":"86","hashOfConfig":"64"},{"size":175,"mtime":1607970770262,"results":"87","hashOfConfig":"64"},{"size":2512,"mtime":1608412348537,"results":"88","hashOfConfig":"64"},{"size":807,"mtime":1608408787903,"results":"89","hashOfConfig":"64"},{"size":159,"mtime":1607972967072,"results":"90","hashOfConfig":"64"},{"size":442,"mtime":1608727624147,"results":"91","hashOfConfig":"64"},{"size":275,"mtime":1607971622984,"results":"92","hashOfConfig":"64"},{"size":2178,"mtime":1614454510783,"results":"93","hashOfConfig":"64"},{"size":818,"mtime":1608408780039,"results":"94","hashOfConfig":"64"},{"size":715,"mtime":1611084795071,"results":"95","hashOfConfig":"64"},{"size":601,"mtime":1607132307503,"results":"96","hashOfConfig":"64"},{"size":169,"mtime":1607466448756,"results":"97","hashOfConfig":"64"},{"size":802,"mtime":1608408791543,"results":"98","hashOfConfig":"64"},{"size":2994,"mtime":1612374634760,"results":"99","hashOfConfig":"64"},{"size":8387,"mtime":1612375875314,"results":"100","hashOfConfig":"64"},{"size":1603,"mtime":1613003034067,"results":"101","hashOfConfig":"64"},{"size":8017,"mtime":1619026512286,"results":"102","hashOfConfig":"64"},{"size":16821,"mtime":1619025810895,"results":"103","hashOfConfig":"64"},{"size":159,"mtime":1613003546064,"results":"104","hashOfConfig":"64"},{"size":940,"mtime":1613053575847,"results":"105","hashOfConfig":"64"},{"size":380,"mtime":1613137287412,"results":"106","hashOfConfig":"64"},{"size":2161,"mtime":1613744934703,"results":"107","hashOfConfig":"64"},{"size":2121,"mtime":1614441841440,"results":"108","hashOfConfig":"64"},{"size":2130,"mtime":1614442022740,"results":"109","hashOfConfig":"64"},{"size":3626,"mtime":1614813852871,"results":"110","hashOfConfig":"64"},{"size":804,"mtime":1614383269003,"results":"111","hashOfConfig":"64"},{"size":700,"mtime":1614208256532,"results":"112","hashOfConfig":"64"},{"size":593,"mtime":1614213061123,"results":"113","hashOfConfig":"64"},{"size":4332,"mtime":1614455671793,"results":"114","hashOfConfig":"64"},{"size":976,"mtime":1614211327968,"results":"115","hashOfConfig":"64"},{"size":4390,"mtime":1614455714622,"results":"116","hashOfConfig":"64"},{"size":239,"mtime":1614384831372,"results":"117","hashOfConfig":"64"},{"size":3586,"mtime":1614443128114,"results":"118","hashOfConfig":"64"},{"size":523,"mtime":1614972196343,"results":"119","hashOfConfig":"64"},{"size":908,"mtime":1614993377657,"results":"120","hashOfConfig":"64"},{"size":2075,"mtime":1619027101903,"results":"121","hashOfConfig":"64"},{"size":116,"mtime":1614980285881,"results":"122","hashOfConfig":"64"},{"size":2719,"mtime":1615159246093,"results":"123","hashOfConfig":"64"},{"size":535,"mtime":1614907968977,"results":"124","hashOfConfig":"64"},{"size":1669,"mtime":1615162101838,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sh4psa",{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"170"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"146"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/www/frontend/src/App.js",[],"/var/www/frontend/src/pages/genre/PageForm.tsx",[],["280","281"],"/var/www/frontend/src/pages/cast-member/Form.tsx",[],["282","283"],"/var/www/frontend/src/pages/genre/Form.tsx",[],["284","285"],"/var/www/frontend/src/components/Badge.tsx",[],"/var/www/frontend/src/pages/category/Table.tsx",["286","287","288","289"],"/var/www/frontend/src/pages/category/Form.tsx",[],"/var/www/frontend/src/pages/cast-member/Table.tsx",["290","291","292","293"],"// @flow \n\nimport * as React from 'react';\nimport format from 'date-fns/format';\nimport parseISO from 'date-fns/parseISO';\nimport { CastMember, CastMemberTypeMap, ListResponse } from '../../util/models';\nimport castMemberHttp from '../../util/http/cast-member-http';\nimport DefaultTable, { TableColumn, makeActionStyles, MuiDataTableRefComponent } from '../../components/Table';\nimport { IconButton, MuiThemeProvider } from '@material-ui/core';\nimport { Link } from \"react-router-dom\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport { useSnackbar } from 'notistack';\nimport useFilter from '../../hooks/useFilter';\nimport * as yup from '../../util/vendor/yup';\nimport { invert } from 'lodash';\nimport { FilterResetButton } from '../../components/Table/FilterResetButton';\n\nconst castMemberNames = Object.values(CastMemberTypeMap);\n\nconst columnsDefinition: TableColumn[] = [\n\n    {\n        name: 'id',\n        label: 'ID',\n        width: '27%',\n        options: {\n            filter: false,\n            sort: false\n        }\n    },\n    {\n        name: 'name',\n        label: 'Nome',\n        width: '46%',\n        options: {\n            filter: false\n        }\n    },\n    {\n        name: 'type',\n        label: 'Tipo',\n        options: {\n            filterOptions: {\n                names: castMemberNames\n            },\n            customBodyRender(value, tableMeta, updateValue) {\n                return CastMemberTypeMap[value];\n            }\n        }\n    },\n    {\n        name: 'created_at',\n        label: 'Criado em',\n        width: '10%',\n        options: {\n            filter: false,\n            customBodyRender(value, tableMeta, updateValue) {\n                return <span>{format(parseISO(value), 'dd/MM/yyyy')}</span>;\n            }\n        }\n    },\n    {\n        name: 'actions',\n        label: 'Ações',\n        width: '13%',\n        options: {\n            filter: false,\n            sort: false,\n            customBodyRender: (value, tableMeta) => {\n                return (\n                    <IconButton\n                        color={'secondary'}\n                        component={Link}\n                        to={'/cast-members/' + tableMeta.rowData[0] + '/edit'}\n                    >\n                        <EditIcon fontSize={'inherit'} />\n                    </IconButton>\n                )\n            }\n        }\n    }\n];\n\nconst debounceTime = 300;\nconst rowsPerPage = 15;\nconst rowsPerPageOptions = [15, 25, 50];\n\nconst Table = () => {\n\n    const snackbar = useSnackbar();\n    const subscribed = React.useRef(true);\n    const [data, setData] = React.useState<CastMember[]>([]);\n    const [loading, setLoading] = React.useState<boolean>(false);\n    const tableRef = React.useRef() as React.MutableRefObject<MuiDataTableRefComponent>;\n\n    const {\n        columns,\n        filterManager,\n        filterState,\n        debounceFilterState,\n        dispatch,\n        totalRecords,\n        setTotalRecords\n    } = useFilter({\n        columns: columnsDefinition,\n        debounceTime: debounceTime,\n        rowsPerPage,\n        rowsPerPageOptions,\n        tableRef,\n        extraFilter: {\n            createValidationSchema: () => {\n                return yup.object().shape({\n                    type: yup.string()\n                        .nullable()\n                        .transform(value => {\n                            return !value || !castMemberNames.includes(value) ? undefined : value;\n                        })\n                        .default(null)\n                })\n            },\n            formatSearchParams: (debouncedState) => {\n                return debouncedState.extraFilter\n                    ? {\n                        ...(\n                            debouncedState.extraFilter.type &&\n                            { type: debouncedState.extraFilter.type }\n                        )\n                    }\n                    : undefined\n            },\n            getStateFromURL: (queryParams) => {\n                return {\n                    type: queryParams.get('type')\n                }\n            }\n        }\n    });\n\n    const indexColumnType = columns.findIndex(c => c.name === 'type');\n    const columnType = columns[indexColumnType];\n    const typeFilterValue = filterState.extraFilter && filterState.extraFilter.type as never;\n    (columnType.options as any).filterList = typeFilterValue ? [typeFilterValue] : [];\n\n    const serverSideFilterList = columns.map(column => []);\n\n    if (typeFilterValue) {\n        serverSideFilterList[indexColumnType] = [typeFilterValue];\n    }\n\n    React.useEffect(() => {\n\n        subscribed.current = true;\n        filterManager.pushHistory();\n        getData();\n        return () => {\n            subscribed.current = false;\n        }\n    }, [\n        filterManager.cleanSearchText(debounceFilterState.search),\n        debounceFilterState.pagination.page,\n        debounceFilterState.pagination.per_page,\n        debounceFilterState.order,\n        JSON.stringify(debounceFilterState.extraFilter)\n    ]);\n\n    async function getData() {\n\n        setLoading(true);\n        try {\n            const { data } = await castMemberHttp.list<ListResponse<CastMember>>({\n                queryParams: {\n                    search: filterManager.cleanSearchText(filterState.search),\n                    page: filterState.pagination.page,\n                    per_page: filterState.pagination.per_page,\n                    sort: filterState.order.sort,\n                    dir: filterState.order.dir,\n                    ...(\n                        debounceFilterState.extraFilter &&\n                        debounceFilterState.extraFilter.type &&\n                        { type: invert(CastMemberTypeMap)[debounceFilterState.extraFilter.type] }\n                    )\n                }\n            });\n            if (subscribed.current) {\n                setData(data.data);\n                setTotalRecords(data.meta.total);\n            }\n        } catch (error) {\n\n            if (castMemberHttp.isCancelledRequest(error)) {\n                return;\n            }\n\n            snackbar.enqueueSnackbar(\n                'Não foi possível carregar as informações',\n                { variant: 'error' }\n            )\n\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    return (\n        <MuiThemeProvider theme={makeActionStyles(columnsDefinition.length - 1)} >\n            <DefaultTable\n                title=\"\"\n                columns={columns}\n                data={data}\n                loading={loading}\n                ref={tableRef}\n                options={{\n                    //serverSideFilterList,\n                    serverSide: true,\n                    responsive: 'standard',\n                    searchText: filterState.search as string,\n                    page: filterState.pagination.page - 1,\n                    rowsPerPage: filterState.pagination.per_page,\n                    rowsPerPageOptions,\n                    count: totalRecords,\n                    onFilterChange: (column, filterList) => {\n                        const columnIndex = columns.findIndex( c => c.name === column)\n                        filterManager.changeExtraFilter({\n                            [column as any]: filterList[columnIndex].length ? filterList[columnIndex][0] : null\n                        })\n                    },\n                    customToolbar: () => (\n                        <FilterResetButton \n                            handleClick={ () => filterManager.resetFilter()} \n                        />\n                    ),\n                    onSearchChange: (value) =>  filterManager.changeSearch(value),\n                    onChangePage: (page) => filterManager.changePage(page),\n                    onChangeRowsPerPage: (perPage) => filterManager.changeRowsPerPage(perPage),\n                    onColumnSortChange: (changedColumn: string, direction: string) =>\n                        filterManager.changeColumnSort(changedColumn,direction)\n                }}\n            />\n        </MuiThemeProvider>\n    );\n};\n\nexport default Table;",["294","295"],"/var/www/frontend/src/pages/genre/Table.tsx",["296","297","298","299","300","301"],"// @flow \nimport { Chip } from '@material-ui/core';\nimport * as React from 'react';\nimport format from 'date-fns/format';\nimport parseISO from 'date-fns/parseISO';\nimport genreHttp from '../../util/http/genre-http';\nimport { Category, Genre, ListResponse } from '../../util/models';\nimport DefaultTable, { TableColumn, makeActionStyles, MuiDataTableRefComponent } from '../../components/Table';\nimport { IconButton, MuiThemeProvider } from '@material-ui/core';\nimport { Link } from \"react-router-dom\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport { useSnackbar } from 'notistack';\nimport * as yup from '../../util/vendor/yup';\nimport useFilter from '../../hooks/useFilter';\nimport { FilterResetButton } from '../../components/Table/FilterResetButton';\nimport categoryHttp from '../../util/http/category-http';\n\nconst columnsDefinition: TableColumn[] = [\n\n    {\n        name: 'id',\n        label: 'ID',\n        width: '27%',\n        options: {\n            filter: false,\n            sort: false\n        }\n    },\n    {\n        name: 'name',\n        label: 'Nome',\n        width: '46%',\n        options: {\n            filter: false\n        }\n    },\n    {\n        name: 'categories',\n        label: 'Categorias',\n        options: {\n            filterType: 'multiselect',\n            filterOptions: {\n                names: []\n            },\n            customBodyRender(value, tableMeta, updateValue) {\n                return value.map((value: any) => value.name).join(', ');\n            }\n        }\n    },\n    {\n        name: 'is_active',\n        label: 'Ativo?',\n        options: {\n            customBodyRender(value, tableMeta, updateValue) {\n                return value ? <Chip label='Sim' color=\"primary\" /> : <Chip label='Não' color=\"secondary\" />;\n            }\n        }\n    },\n    {\n        name: 'created_at',\n        label: 'Criado em',\n        options: {\n            filter: false,\n            customBodyRender(value, tableMeta, updateValue) {\n                return <span>{format(parseISO(value), 'dd/MM/yyyy')}</span>;\n            }\n        }\n    },\n    {\n        name: 'actions',\n        label: 'Ações',\n        width: '13%',\n        options: {\n            filter: false,\n            sort: false,\n            customBodyRender: (value, tableMeta) => {\n                return (\n                    <IconButton\n                        color={'secondary'}\n                        component={Link}\n                        to={'/genres/' + tableMeta.rowData[0] + '/edit'}\n                    >\n                        <EditIcon fontSize={'inherit'} />\n                    </IconButton>\n                )\n            }\n        }\n    }\n];\n\nconst debounceTime = 300;\nconst rowsPerPage = 15;\nconst rowsPerPageOptions = [15, 25, 50];\n\nconst Table = () => {\n\n    const snackbar = useSnackbar();\n    const subscribed = React.useRef(true);\n    const [data, setData] = React.useState<Genre[]>([]);\n    const [loading, setLoading] = React.useState<boolean>(false);\n    const [categories, setCategories] = React.useState<Category[]>();\n    const tableRef = React.useRef() as React.MutableRefObject<MuiDataTableRefComponent>;\n\n    const {\n        columns,\n        filterManager,\n        filterState,\n        debounceFilterState,\n        dispatch,\n        totalRecords,\n        setTotalRecords\n    } = useFilter({\n        columns: columnsDefinition,\n        debounceTime: debounceTime,\n        rowsPerPage,\n        rowsPerPageOptions,\n        tableRef,\n        extraFilter: {\n            createValidationSchema: () => {\n                return yup.object().shape({\n                    categories: yup.mixed()\n                        .nullable()\n                        .transform(value => {\n                            return !value || value === '' ? undefined : value.split(',');\n                        })\n                        .default(null)\n                })\n            },\n            formatSearchParams: (debouncedState) => {\n                return debouncedState.extraFilter\n                    ? {\n                        ...(\n                            debouncedState.extraFilter.categories &&\n                            { categories: debouncedState.extraFilter.categories.join(',') }\n                        )\n                    }\n                    : undefined\n            },\n            getStateFromURL: (queryParams) => {\n                return {\n                    categories: queryParams.get('categories')\n                }\n            }\n        }\n    });\n\n    const indexColumnCategories = columns.findIndex(c => c.name === 'categories');\n    const columnCategories = columns[indexColumnCategories];\n    const categoriesFilterValue = filterState.extraFilter && filterState.extraFilter.categories;\n    (columnCategories.options as any).filterList = categoriesFilterValue\n        ? categoriesFilterValue\n        : [];\n    const serverSideFilterList = columns.map(column => []);\n    if(categoriesFilterValue) {\n        serverSideFilterList[indexColumnCategories] = categoriesFilterValue;\n    }    \n\n    React.useEffect(() => {\n\n        let isSubscribed = true;\n        (async () => {\n\n            try {\n                const { data } = await categoryHttp.list({ queryParams: { all: '' } });\n                if (isSubscribed) {\n                    setCategories(data.data);\n                    (columnCategories.options as any).filterOptions.names = data.data.map(category => category.name)\n                }\n            } catch (error) {\n                snackbar.enqueueSnackbar(\n                    'Não foi possível carregar as informações',\n                    { variant: 'error' }\n                )\n            }\n\n        })();\n\n        return () => {\n            isSubscribed = false;\n        }\n\n    }, []);\n\n    React.useEffect(() => {\n     \n        subscribed.current = true;\n        filterManager.pushHistory();\n        getData();\n        return () => {\n            subscribed.current = false;\n        }\n\n    }, [\n        filterManager.cleanSearchText(debounceFilterState.search),\n        debounceFilterState.pagination.page,\n        debounceFilterState.pagination.per_page,\n        debounceFilterState.order,\n        JSON.stringify(debounceFilterState.extraFilter)\n\n    ]);\n\n\n    async function getData() {\n\n        setLoading(true);\n        try {\n            \n            const { data } = await genreHttp.list<ListResponse<Genre>>({\n                queryParams: {\n                    search: filterManager.cleanSearchText(filterState.search),\n                    page: filterState.pagination.page,\n                    per_page: filterState.pagination.per_page,\n                    sort: filterState.order.sort,\n                    dir: filterState.order.dir,\n                    ...(\n                        debounceFilterState.extraFilter &&\n                        debounceFilterState.extraFilter.categories &&\n                        { categories: debounceFilterState.extraFilter.categories }\n                    )\n                }\n            });\n            if (subscribed.current) {\n                setData(data.data);\n                setTotalRecords(data.meta.total);\n            }\n        } catch (error) {\n\n            if(categoryHttp.isCancelledRequest(error)){\n                return;\n            }\n\n            snackbar.enqueueSnackbar(\n                'Não foi possível carregar as informações',\n                { variant: 'error' }\n            )\n\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    return (\n\n        <MuiThemeProvider theme={makeActionStyles(columnsDefinition.length - 1)} >\n            <DefaultTable\n                title=\"\"\n                columns={columns}\n                data={data}\n                loading={loading}\n                ref={tableRef}\n                options={{\n                    //serverSideFilterList,\n                    serverSide: true,\n                    responsive: 'standard',\n                    searchText: filterState.search as string,\n                    page: filterState.pagination.page - 1,\n                    rowsPerPage: filterState.pagination.per_page,\n                    rowsPerPageOptions,\n                    count: totalRecords,\n                    onFilterChange: (column, filterList) => {\n                        const columnIndex = columns.findIndex(c => c.name === column)\n                        filterManager.changeExtraFilter({\n                            [column as any]: filterList[columnIndex].length ? filterList[columnIndex] : null\n                        })\n                    },\n                    customToolbar: () => (\n                        <FilterResetButton\n                            handleClick={() => filterManager.resetFilter()}\n                        />\n                    ),\n                    onSearchChange: (value) => filterManager.changeSearch(value),\n                    onChangePage: (page) => filterManager.changePage(page),\n                    onChangeRowsPerPage: (perPage) => filterManager.changeRowsPerPage(perPage),\n                    onColumnSortChange: (changedColumn: string, direction: string) =>\n                        filterManager.changeColumnSort(changedColumn, direction)\n                }}\n            />\n        </MuiThemeProvider>\n    );\n};\n\nexport default Table;",["302","303"],"/var/www/frontend/src/index.js",[],["304","305"],"/var/www/frontend/src/components/Navbar/Menu.tsx",[],["306","307"],"/var/www/frontend/src/pages/Dashboard.tsx",[],"/var/www/frontend/src/components/SubmitActions.tsx",[],["308","309"],"/var/www/frontend/src/components/DefaultForm.tsx",[],["310","311"],"/var/www/frontend/src/components/Navbar/index.tsx",[],["312","313"],"/var/www/frontend/src/routes/AppRouter.tsx",[],["314","315"],"/var/www/frontend/src/reportWebVitals.js",[],["316","317"],"/var/www/frontend/src/routes/index.tsx",[],["318","319"],"/var/www/frontend/src/components/SnackbarProvider.tsx",[],"/var/www/frontend/src/util/vendor/yup.ts",["320","321","322","323"],"import { setLocale } from 'yup';\n\nconst ptBR = {\n\n    mixed: {\n        required: '${path} é obrigatorio',\n        notType: '${path} é inválido'\n    },\n    string: {\n        max: '${path} precisa ter máximo ${max} caracteres'\n    },\n    number: {\n        min: '${path} precisa ser no mínimo ${min}'\n    }\n}\n\nsetLocale(ptBR);\n\nexport * from 'yup';",["324","325"],"/var/www/frontend/src/util/http/index.ts",[],["326","327"],"/var/www/frontend/src/components/Table/index.tsx",[],["328","329"],"/var/www/frontend/src/theme.ts",[],["330","331"],"/var/www/frontend/src/util/http/cast-member-http.ts",[],"/var/www/frontend/src/components/Breadcrumbs.tsx",[],["332","333"],"/var/www/frontend/src/pages/category/PageList.tsx",[],"/var/www/frontend/src/util/http/genre-http.ts",[],["334","335"],"/var/www/frontend/src/pages/category/PageForm.tsx",[],["336","337"],"/var/www/frontend/src/pages/cast-member/PageForm.tsx",[],"/var/www/frontend/src/util/http/http-resource.ts",[],["338","339"],"/var/www/frontend/src/pages/cast-member/PageList.tsx",[],"/var/www/frontend/src/components/Table/FilterResetButton.tsx",["340"],"// @flow \nimport { IconButton, makeStyles, Tooltip } from '@material-ui/core';\nimport * as React from 'react';\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\nimport theme from '../../theme';\n\nconst useStyles = makeStyles( theme => ({\n    IconButton: (theme as any).overrides.MUIDataTableToolbar.icon\n}));\n\ninterface FilterResetButtonProps {\n    handleClick: () => void\n}\n\nexport const FilterResetButton: React.FC<FilterResetButtonProps> = (props) => {\n\n    const classes = useStyles();\n    return (\n       <Tooltip title={'Limpar busca'}>\n           <IconButton className={classes.IconButton} onClick={props.handleClick}>\n                <ClearAllIcon/>\n           </IconButton>\n       </Tooltip>\n    );\n};","/var/www/frontend/src/components/Navbar/Page.tsx",[],"/var/www/frontend/src/util/http/category-http.ts",[],"/var/www/frontend/src/pages/genre/PageList.tsx",[],["341","342"],"/var/www/frontend/src/store/filter/index.ts",[],"/var/www/frontend/src/hooks/useFilter.ts",["343"],"import { MUIDataTableColumn } from 'mui-datatables';\nimport { Dispatch, Reducer, useReducer, useState, useEffect } from 'react';\nimport reducer, { Creators } from '../store/filter';\nimport { Actions as FilterActions, State as FilterState } from '../store/filter/types';\nimport { useDebounce } from 'use-debounce';\nimport { useHistory } from 'react-router-dom';\nimport { History } from 'history';\nimport { isEqual } from 'lodash';\nimport * as yup from '../util/vendor/yup';\nimport { MuiDataTableRefComponent } from '../components/Table';\n\ninterface FilterManagerOptions {\n    columns: MUIDataTableColumn[];\n    rowsPerPage: number;\n    rowsPerPageOptions: number[];\n    debounceTime: number;\n    history: History;\n    tableRef: React.MutableRefObject<MuiDataTableRefComponent>\n    extraFilter?: ExtractFilter\n}\n\ninterface ExtractFilter {\n    getStateFromURL: (queryParams: URLSearchParams) => any,\n    formatSearchParams: (debouncedState: FilterState) => any,\n    createValidationSchema: () => any\n}\n\ninterface UseFilterOptions extends Omit<FilterManagerOptions, 'history'> { }\n\nexport default function useFilter(options: UseFilterOptions) {\n\n    const history = useHistory();\n    const filterManager = new FilterManager({ ...options, history });\n    const INITIAL_STATE = filterManager.getStateFromURL();\n    const [filterState, dispatch] = useReducer<Reducer<FilterState, FilterActions>>(reducer, INITIAL_STATE);\n    const [debounceFilterState] = useDebounce(filterState, options.debounceTime);\n    const [totalRecords, setTotalRecords] = useState<number>(0);\n\n    filterManager.state = filterState;\n    filterManager.debouncedState = debounceFilterState;\n    filterManager.dispatch = dispatch;\n\n    filterManager.applyOrderInColumns();\n\n    useEffect(() => {\n        filterManager.replaceHistory();\n    }, []);\n\n    return {\n        columns: filterManager.columns,\n        filterManager,\n        filterState,\n        debounceFilterState,\n        dispatch,\n        totalRecords,\n        setTotalRecords\n    }\n}\n\nexport class FilterManager {\n\n    schema;\n    state: FilterState = null as any;\n    debouncedState: FilterState = null as any;\n    dispatch: Dispatch<FilterActions> = null as any;\n    columns: MUIDataTableColumn[];\n    rowsPerPag: number;\n    rowsPerPageOptions: number[];\n    history: History;\n    tableRef: React.MutableRefObject<MuiDataTableRefComponent>;\n    extraFilter?: ExtractFilter;\n\n    constructor(options: FilterManagerOptions) {\n        const { columns, rowsPerPage, rowsPerPageOptions, history, tableRef, extraFilter } = options;\n        this.columns = columns;\n        this.rowsPerPag = rowsPerPage;\n        this.rowsPerPageOptions = rowsPerPageOptions;\n        this.history = history;\n        this.tableRef = tableRef;\n        this.extraFilter = extraFilter;\n        this.createValidationSchema();\n    }\n\n    private resetTablePagination() {\n        this.tableRef.current.changeRowsPerPage(this.rowsPerPag);\n        this.tableRef.current.changePage(0);\n    }\n\n    changeSearch(value) {\n        this.dispatch(Creators.setSearch({ search: value as any }));\n    }\n\n    changePage(page) {\n        this.dispatch(Creators.setPage({ page: page + 1 }));\n    }\n\n    changeRowsPerPage(perPage) {\n        this.dispatch(Creators.setPerPage({ per_page: perPage }));\n    }\n\n    changeColumnSort(changedColumn: string, direction: string) {\n        this.dispatch(Creators.setOrder({\n            sort: changedColumn,\n            dir: direction.includes('desc') ? 'desc' : 'asc'\n        }));\n        this.resetTablePagination();\n    }\n\n    changeExtraFilter(data) {\n        this.dispatch(Creators.updateExtraFilter(data));\n    }\n\n    resetFilter() {\n\n        const INITIAL_STATE = {\n            ...this.schema.cast({}),\n            search: {value: null, update: true}\n        };\n        this.dispatch(Creators.setReset({\n            state: INITIAL_STATE\n        }));\n        this.resetTablePagination();\n    }\n\n    applyOrderInColumns() {\n        this.columns = this.columns.map(column => {\n            return column.name === this.state.order.sort\n                ? {\n                    ...column,\n                    options: {\n                        ...column.options,\n                        sortDirection: this.state.order.dir as any\n                    }\n                }\n                : column;\n        });\n    }\n\n    cleanSearchText(text) {\n\n        let newText = text;\n        if (text && text.value !== undefined) {\n            newText = text.value;\n        }\n\n        return newText;\n    }\n\n    replaceHistory() {\n        this.history.replace({\n            pathname: this.history.location.pathname,\n            search: \"?\" + new URLSearchParams(this.formatSearchParams() as any),\n            state: this.debouncedState\n        });\n    }\n\n    pushHistory() {\n        const newLocation = {\n            pathname: this.history.location.pathname,\n            search: \"?\" + new URLSearchParams(this.formatSearchParams() as any),\n            state: {\n                ...this.debouncedState,\n                search: this.cleanSearchText(this.debouncedState.search)\n            }\n        }\n\n        const oldState = this.history.location.state;\n        const nextState = this.debouncedState\n        if (isEqual(oldState, nextState)) {\n            return;\n        }\n\n        this.history.push(newLocation);\n    }\n\n    private formatSearchParams() {\n        const search = this.cleanSearchText(this.debouncedState.search);\n        return {\n            ...(search && search !== '' && { search: search }),\n            ...(this.debouncedState.pagination.page !== 1 && { page: this.debouncedState.pagination.page }),\n            ...(this.debouncedState.pagination.per_page !== 15 && { per_page: this.debouncedState.pagination.per_page }),\n            ...(\n                this.debouncedState.order.sort && {\n                    sort: this.debouncedState.order.sort,\n                    dir: this.debouncedState.order.dir\n                }\n            ),\n            ...(\n                this.extraFilter && this.extraFilter.formatSearchParams(this.debouncedState)\n                \n            )\n        }\n    }\n\n    getStateFromURL() {\n        const queryParams = new URLSearchParams(this.history.location.search.substr(1));\n        return this.schema.cast({\n            search: queryParams.get('search'),\n            pagination: {\n                page: queryParams.get('page'),\n                per_page: queryParams.get('per_page'),\n            },\n            order: {\n                sort: queryParams.get('sort'),\n                dir: queryParams.get('dir'),\n            },\n            ...(\n                this.extraFilter && {\n                    extraFilter: this.extraFilter.getStateFromURL(queryParams)\n                }\n            )\n        });\n    }\n\n    private createValidationSchema() {\n\n        this.schema = yup.object().shape({\n            search: yup.string()\n                .transform(value => !value ? undefined : value)\n                .default(''),\n            pagination: yup.object().shape({\n                page: yup.number()\n                    .transform(value => isNaN(value) || parseInt(value) < 1 ? undefined : value)\n                    .default(1),\n                per_page: yup.number()\n                    .transform( value => \n                        isNaN(value) || !this.rowsPerPageOptions.includes( parseInt(value) ) ? undefined : value\n                    )\n                    .default(this.rowsPerPag),\n            }),\n            order: yup.object().shape({\n                sort: yup.string()\n                    .nullable()\n                    .transform(value => {\n                        const columnsName = this.columns\n                            .filter(column => !column.options || column.options.sort !== false)\n                            .map(column => column.name);\n                        return columnsName.includes(value) ? value : undefined;\n                    })\n                    .default(null),\n                dir: yup.string()\n                    .nullable()\n                    .transform(value => !value || !['asc', 'desc'].includes(value.toLowerCase()) ? undefined : value)\n                    .default(null),\n            }),\n            ...(\n                this.extraFilter && {\n                    extraFilter: this.extraFilter.createValidationSchema()\n                }\n            )\n        });\n    }\n}","/var/www/frontend/src/util/models.ts",[],["344","345"],"/var/www/frontend/src/pages/video/Table.tsx",["346","347","348","349","350","351","352"],"/var/www/frontend/src/pages/video/Form/index.tsx",["353","354","355","356","357","358"],"/var/www/frontend/src/util/http/video-http.ts",[],"/var/www/frontend/src/components/Rating.tsx",[],"/var/www/frontend/src/pages/video/PageForm.tsx",[],"/var/www/frontend/src/pages/video/Form/RatingField.tsx",[],"/var/www/frontend/src/components/InputFile.tsx",[],"/var/www/frontend/src/pages/video/Form/UploadField.tsx",[],"/var/www/frontend/src/components/AsyncAutocomplete.tsx",["359","360","361"],"// @flow \nimport * as React from 'react';\nimport { CircularProgress, TextField, TextFieldProps } from '@material-ui/core';\nimport { Autocomplete, AutocompleteProps } from '@material-ui/lab';\nimport { useState, useEffect, useImperativeHandle } from 'react';\nimport { useDebounce } from 'use-debounce/lib';\n\n\nexport interface AsyncAutocompleteComponent {\n    clear: () => void\n}\n\ninterface AutocompletePropsOmit extends Omit<AutocompleteProps<any, boolean, boolean, boolean>, 'renderInput'>{ }   \n\nexport interface AsyncAutocompleteProps extends React.RefAttributes<AsyncAutocompleteComponent> {\n    fetchOptions: (searchText) => Promise<any>;\n    debounceTime?: number;\n    TextFieldProps?: TextFieldProps;\n    AutocompleteProps?: Omit<AutocompletePropsOmit, 'options'>;\n}   \n\nconst AsyncAutocomplete = React.forwardRef<AsyncAutocompleteComponent, AsyncAutocompleteProps>((props, ref) => {\n\n\n    const { AutocompleteProps, debounceTime = 300 } = props;\n    const { freeSolo = false, onOpen, onClose, onInputChange } = AutocompleteProps as any;\n    const [open, setOpen] = useState(false);\n    const [searchText, setSearchText] = useState(\"\");\n    const [debouncedSearchText] = useDebounce( searchText,debounceTime);\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState([]);\n\n    const textFieldProps: TextFieldProps = {\n        margin: 'normal',\n        variant: 'outlined',\n        InputLabelProps: { shrink: true },\n        ...(props.TextFieldProps && { ...props.TextFieldProps })\n    };\n\n    const autocompleteProps: AutocompleteProps<any, boolean, boolean, boolean> = {\n        loadingText: 'Carregando...',\n        noOptionsText: 'Nenhum item encontrado',\n        ...(AutocompleteProps && { ...AutocompleteProps }),\n        open,\n        options,\n        loading: loading,\n        inputValue: searchText,\n        onOpen() {\n            setOpen(true);\n            onOpen && onOpen();\n        },\n        onClose() {\n            setOpen(false);\n            onClose && onClose();\n        },\n        onInputChange(event, value) {\n            setSearchText(value);\n            onInputChange && onInputChange();\n        },\n        renderInput: params => (\n            <TextField\n                {...params}\n                {...textFieldProps}\n                InputProps={{\n                    ...params.InputProps,\n                    endAdornment: (\n                        <>\n                            {loading && <CircularProgress color={\"inherit\"} size={20} />}\n                            {params.InputProps.endAdornment}\n                        </>\n                    )\n                }}\n            />\n        )\n    };\n\n    useEffect(() => {\n        if(!open && !freeSolo){\n            setOptions([]);\n        }\n    },[open])\n\n    useEffect(() => {\n\n        if(!open || (debouncedSearchText === \"\" && freeSolo) ){\n            return;\n        }\n\n        let isSubscribed = true;\n        (async () => {\n\n            setLoading(true);\n            try {\n\n                const data = await props.fetchOptions(debouncedSearchText);\n                if (isSubscribed) {\n                    setOptions(data);\n                }\n\n            } finally {\n                setLoading(false);\n            }\n        })();\n\n        return () => {\n            isSubscribed = false;\n        }\n\n    }, [freeSolo ? debouncedSearchText : open]);\n\n    useImperativeHandle(ref, () => ({\n        clear: () => {\n            setSearchText(\"\");\n            setOptions([]);\n        }\n    }));\n\n    \n    return (\n        <Autocomplete {...autocompleteProps} />\n    );\n});\n\nexport default AsyncAutocomplete;","/var/www/frontend/src/components/GridSelectedItem.tsx",[],"/var/www/frontend/src/components/GridSelected.tsx",[],"/var/www/frontend/src/hooks/useHttpHandled.tsx",[],"/var/www/frontend/src/pages/video/Form/GenreField.tsx",[],"/var/www/frontend/src/hooks/useCollectionManager.tsx",[],"/var/www/frontend/src/pages/video/Form/CategoryField.tsx",[],"/var/www/frontend/src/util/model-filters.tsx",[],"/var/www/frontend/src/pages/video/Form/CastMemberField.tsx",["362","363"],"/var/www/frontend/src/hooks/useDeleteCollection.ts",[],"/var/www/frontend/src/components/Spinner.tsx",[],["364","365"],"/var/www/frontend/src/components/loading/LoadingProvider.tsx",["366","367"],"/var/www/frontend/src/components/loading/LoadingContext.tsx",[],"/var/www/frontend/src/components/SnackbarUpload/index.tsx",[],"/var/www/frontend/src/hooks/useSnackbarFormError.ts",["368"],"/var/www/frontend/src/components/SnackbarUpload/UploadItem.tsx",[],{"ruleId":"369","replacedBy":"370"},{"ruleId":"371","replacedBy":"372"},{"ruleId":"369","replacedBy":"373"},{"ruleId":"371","replacedBy":"374"},{"ruleId":"369","replacedBy":"375"},{"ruleId":"371","replacedBy":"376"},{"ruleId":"377","severity":1,"message":"378","line":103,"column":9,"nodeType":"379","messageId":"380","endLine":103,"endColumn":17},{"ruleId":"381","severity":1,"message":"382","line":163,"column":8,"nodeType":"383","endLine":169,"endColumn":6,"suggestions":"384"},{"ruleId":"381","severity":1,"message":"385","line":164,"column":9,"nodeType":"386","endLine":164,"endColumn":66},{"ruleId":"381","severity":1,"message":"385","line":168,"column":9,"nodeType":"386","endLine":168,"endColumn":56},{"ruleId":"377","severity":1,"message":"378","line":101,"column":9,"nodeType":"379","messageId":"380","endLine":101,"endColumn":17},{"ruleId":"381","severity":1,"message":"382","line":158,"column":8,"nodeType":"383","endLine":164,"endColumn":6,"suggestions":"387"},{"ruleId":"381","severity":1,"message":"385","line":159,"column":9,"nodeType":"386","endLine":159,"endColumn":66},{"ruleId":"381","severity":1,"message":"385","line":163,"column":9,"nodeType":"386","endLine":163,"endColumn":56},{"ruleId":"369","replacedBy":"388"},{"ruleId":"371","replacedBy":"389"},{"ruleId":"377","severity":1,"message":"390","line":101,"column":12,"nodeType":"379","messageId":"380","endLine":101,"endColumn":22},{"ruleId":"377","severity":1,"message":"378","line":109,"column":9,"nodeType":"379","messageId":"380","endLine":109,"endColumn":17},{"ruleId":"381","severity":1,"message":"391","line":182,"column":8,"nodeType":"383","endLine":182,"endColumn":10,"suggestions":"392"},{"ruleId":"381","severity":1,"message":"382","line":193,"column":8,"nodeType":"383","endLine":200,"endColumn":6,"suggestions":"393"},{"ruleId":"381","severity":1,"message":"385","line":194,"column":9,"nodeType":"386","endLine":194,"endColumn":66},{"ruleId":"381","severity":1,"message":"385","line":198,"column":9,"nodeType":"386","endLine":198,"endColumn":56},{"ruleId":"369","replacedBy":"394"},{"ruleId":"371","replacedBy":"395"},{"ruleId":"369","replacedBy":"396"},{"ruleId":"371","replacedBy":"397"},{"ruleId":"369","replacedBy":"398"},{"ruleId":"371","replacedBy":"399"},{"ruleId":"369","replacedBy":"400"},{"ruleId":"371","replacedBy":"401"},{"ruleId":"369","replacedBy":"402"},{"ruleId":"371","replacedBy":"403"},{"ruleId":"369","replacedBy":"396"},{"ruleId":"371","replacedBy":"397"},{"ruleId":"369","replacedBy":"404"},{"ruleId":"371","replacedBy":"405"},{"ruleId":"369","replacedBy":"406"},{"ruleId":"371","replacedBy":"407"},{"ruleId":"369","replacedBy":"408"},{"ruleId":"371","replacedBy":"409"},{"ruleId":"410","severity":1,"message":"411","line":6,"column":19,"nodeType":"412","messageId":"413","endLine":6,"endColumn":42},{"ruleId":"410","severity":1,"message":"411","line":7,"column":18,"nodeType":"412","messageId":"413","endLine":7,"endColumn":38},{"ruleId":"410","severity":1,"message":"411","line":10,"column":14,"nodeType":"412","messageId":"413","endLine":10,"endColumn":60},{"ruleId":"410","severity":1,"message":"411","line":13,"column":14,"nodeType":"412","messageId":"413","endLine":13,"endColumn":52},{"ruleId":"369","replacedBy":"414"},{"ruleId":"371","replacedBy":"415"},{"ruleId":"369","replacedBy":"416"},{"ruleId":"371","replacedBy":"417"},{"ruleId":"369","replacedBy":"418"},{"ruleId":"371","replacedBy":"419"},{"ruleId":"369","replacedBy":"420"},{"ruleId":"371","replacedBy":"421"},{"ruleId":"369","replacedBy":"422"},{"ruleId":"371","replacedBy":"423"},{"ruleId":"369","replacedBy":"424"},{"ruleId":"371","replacedBy":"425"},{"ruleId":"369","replacedBy":"426"},{"ruleId":"371","replacedBy":"427"},{"ruleId":"369","replacedBy":"428"},{"ruleId":"371","replacedBy":"429"},{"ruleId":"377","severity":1,"message":"430","line":5,"column":8,"nodeType":"379","messageId":"380","endLine":5,"endColumn":13},{"ruleId":"369","replacedBy":"431"},{"ruleId":"371","replacedBy":"432"},{"ruleId":"381","severity":1,"message":"433","line":47,"column":8,"nodeType":"383","endLine":47,"endColumn":10,"suggestions":"434"},{"ruleId":"369","replacedBy":"435"},{"ruleId":"371","replacedBy":"436"},{"ruleId":"377","severity":1,"message":"437","line":2,"column":10,"nodeType":"379","messageId":"380","endLine":2,"endColumn":14},{"ruleId":"377","severity":1,"message":"438","line":12,"column":13,"nodeType":"379","messageId":"380","endLine":12,"endColumn":16},{"ruleId":"377","severity":1,"message":"439","line":17,"column":8,"nodeType":"379","messageId":"380","endLine":17,"endColumn":20},{"ruleId":"377","severity":1,"message":"440","line":99,"column":7,"nodeType":"379","messageId":"380","endLine":99,"endColumn":25},{"ruleId":"377","severity":1,"message":"378","line":117,"column":9,"nodeType":"379","messageId":"380","endLine":117,"endColumn":17},{"ruleId":"381","severity":1,"message":"382","line":137,"column":8,"nodeType":"383","endLine":142,"endColumn":6,"suggestions":"441"},{"ruleId":"381","severity":1,"message":"385","line":138,"column":9,"nodeType":"386","endLine":138,"endColumn":66},{"ruleId":"377","severity":1,"message":"442","line":1,"column":130,"nodeType":"379","messageId":"380","endLine":1,"endColumn":144},{"ruleId":"377","severity":1,"message":"443","line":1,"column":146,"nodeType":"379","messageId":"380","endLine":1,"endColumn":154},{"ruleId":"377","severity":1,"message":"444","line":21,"column":9,"nodeType":"379","messageId":"380","endLine":21,"endColumn":20},{"ruleId":"377","severity":1,"message":"445","line":22,"column":19,"nodeType":"379","messageId":"380","endLine":22,"endColumn":25},{"ruleId":"377","severity":1,"message":"446","line":22,"column":27,"nodeType":"379","messageId":"380","endLine":22,"endColumn":39},{"ruleId":"381","severity":1,"message":"447","line":188,"column":8,"nodeType":"383","endLine":188,"endColumn":10,"suggestions":"448"},{"ruleId":"381","severity":1,"message":"449","line":81,"column":7,"nodeType":"383","endLine":81,"endColumn":13,"suggestions":"450"},{"ruleId":"381","severity":1,"message":"451","line":109,"column":8,"nodeType":"383","endLine":109,"endColumn":47,"suggestions":"452"},{"ruleId":"381","severity":1,"message":"453","line":109,"column":9,"nodeType":"454","endLine":109,"endColumn":46},{"ruleId":"377","severity":1,"message":"455","line":7,"column":57,"nodeType":"379","messageId":"380","endLine":7,"endColumn":67},{"ruleId":"377","severity":1,"message":"456","line":7,"column":69,"nodeType":"379","messageId":"380","endLine":7,"endColumn":74},{"ruleId":"369","replacedBy":"457"},{"ruleId":"371","replacedBy":"458"},{"ruleId":"377","severity":1,"message":"459","line":4,"column":8,"nodeType":"379","messageId":"380","endLine":4,"endColumn":13},{"ruleId":"381","severity":1,"message":"460","line":47,"column":9,"nodeType":"412","endLine":47,"endColumn":13},{"ruleId":"381","severity":1,"message":"461","line":15,"column":8,"nodeType":"383","endLine":15,"endColumn":21,"suggestions":"462"},"no-native-reassign",["463"],"no-negated-in-lhs",["464"],["463"],["464"],["463"],["464"],"@typescript-eslint/no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'filterManager' and 'getData'. Either include them or remove the dependency array.","ArrayExpression",["465"],"React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression",["466"],["463"],["464"],"'categories' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'columnCategories.options' and 'snackbar'. Either include them or remove the dependency array.",["467"],["468"],["463"],["464"],["463"],["464"],["463"],["464"],["463"],["464"],["463"],["464"],["463"],["464"],["463"],["464"],["463"],["464"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression",["463"],["464"],["463"],["464"],["463"],["464"],["463"],["464"],["463"],["464"],["463"],["464"],["463"],["464"],["463"],["464"],"'theme' is defined but never used.",["463"],["464"],"React Hook useEffect has a missing dependency: 'filterManager'. Either include it or remove the dependency array.",["469"],["463"],["464"],"'Chip' is defined but never used.","'yup' is defined but never used.","'categoryHttp' is defined but never used.","'debouncedSeachTime' is assigned a value but never used.",["470"],"'FormHelperText' is defined but never used.","'Snackbar' is defined but never used.","'useSelector' is defined but never used.","'Upload' is defined but never used.","'UploadModule' is defined but never used.","React Hook React.useEffect has missing dependencies: 'id', 'reset', and 'snackbar'. Either include them or remove the dependency array.",["471"],"React Hook useEffect has a missing dependency: 'freeSolo'. Either include it or remove the dependency array.",["472"],"React Hook useEffect has missing dependencies: 'debouncedSearchText', 'freeSolo', 'open', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["473"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ConditionalExpression","'makeStyles' is defined but never used.","'Theme' is defined but never used.",["463"],["464"],"'axios' is defined but never used.","The true literal is not a valid dependency because it never changes. You can safely remove it.","React Hook useEffect has missing dependencies: 'errors' and 'snackbar'. Either include them or remove the dependency array.",["474"],"no-global-assign","no-unsafe-negation",{"desc":"475","fix":"476"},{"desc":"475","fix":"477"},{"desc":"478","fix":"479"},{"desc":"475","fix":"480"},{"desc":"481","fix":"482"},{"desc":"475","fix":"483"},{"desc":"484","fix":"485"},{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},{"desc":"490","fix":"491"},"Update the dependencies array to be: [debounceFilterState.pagination.page, debounceFilterState.pagination.per_page, debounceFilterState.order, filterManager, getData]",{"range":"492","text":"493"},{"range":"494","text":"493"},"Update the dependencies array to be: [columnCategories.options, snackbar]",{"range":"495","text":"496"},{"range":"497","text":"493"},"Update the dependencies array to be: [filterManager]",{"range":"498","text":"499"},{"range":"500","text":"493"},"Update the dependencies array to be: [id, reset, snackbar]",{"range":"501","text":"502"},"Update the dependencies array to be: [freeSolo, open]",{"range":"503","text":"504"},"Update the dependencies array to be: [debouncedSearchText, freeSolo, open, props]",{"range":"505","text":"506"},"Update the dependencies array to be: [errors, snackbar, submitCount]",{"range":"507","text":"508"},[5014,5273],"[debounceFilterState.pagination.page, debounceFilterState.pagination.per_page, debounceFilterState.order, filterManager, getData]",[4749,5008],[5731,5733],"[columnCategories.options, snackbar]",[5943,6203],[1808,1810],"[filterManager]",[3941,4143],[5780,5782],"[id, reset, snackbar]",[2767,2773],"[freeSolo, open]",[3332,3371],"[debouncedSearchText, freeSolo, open, props]",[478,491],"[errors, snackbar, submitCount]"]